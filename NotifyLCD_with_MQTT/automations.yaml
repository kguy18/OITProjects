# Add this to your Home Assistant Automations file and modify with your own sensors that you want displayed. Each line can only do 20 characters so you may need to experiment with how which you want and where.

# Turns the LED on
- alias: Notify Error Light On
  trigger:
    platform: template
    value_template: '{{ (states.sensor.hass_error.state) == "ON" }}'
  action:
  - service: switch.turn_on
    entity_id: switch.notify_error

# Turns the screen on
- alias: Notify Screen On
  trigger:
  - platform: state
    entity_id: binary_sensor.notify_motion
    to: 'on'
  action:
  - service: switch.turn_on
    entity_id: switch.reef_screen_on

# Turns the screen and light off
- alias: Notify Screen Off
  trigger:
  - platform: state
    entity_id: binary_sensor.notify_motion
    to: 'off'
  action:
  - service: switch.turn_off
    entity_id: switch.reef_screen_on
  - service: switch.turn_off
    entity_id: switch.reef_notify_error

# Clears the screen - you may need this if there are messages of different lengths and you can see the ghosts of those lines
- alias: Reef Notify Clear Screen
  trigger:
  - platform: time_pattern
    seconds: '115'
  action:
  - service: switch.turn_on
    entity_id: switch.reef_clear_screen
  - delay: 00:00:30
  - service: switch.turn_off
    entity_id: switch.reef_clear_screen

# Sends the display messages every 2 minutes, 1 per line
- alias: Reef Notify Screen Update
  trigger:
  - platform: time_pattern
    minutes: '2'
  action:
  - service: mqtt.publish
    data_template:
      topic: notifyscreen/line1
      payload: >
        Temp:{{ states.sensor.temp.state }}F | {{ states.sensor.float.state }} |
      retain: true
  - service: mqtt.publish
    data_template:
      topic: notifyscreen/line2
      payload: >
        Sun: {{ states.sensor.sunrise.state }} - {{ states.sensor.sunset.state }}
      retain: true
  - service: mqtt.publish
    data_template:
      topic: notifyscreen/line3
      payload: >
        Lgt:{{ states.sensor.LightBrightness.state | round(0) }} | Color:{{states.sensor.LightColor.state | round(0)}} |
      retain: true
  - service: mqtt.publish
    data_template:
      topic: notifyscreen/line4
      payload: >
        pH:{{ states.sensor.ph_sensor.state }} | Na:{{ states.sensor.na_sensor.state }} |
      retain: true
